!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("deep-clone-simple"),require("object-bystring")):"function"==typeof define&&define.amd?define(["exports","deep-clone-simple","object-bystring"],e):e((t=t||self).substate={},t.deepclone,t.byString)}(this,(function(t,e,s){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,s=s&&s.hasOwnProperty("default")?s.default:s;class a{constructor(){this.events={}}on(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)}off(t,e){if(this.events[t])for(var s=0;s<this.events[t].length;s++)if(this.events[t][s]===e){this.events[t].splice(s,1);break}}emit(t,e){console.log("in emit: ",e),this.events[t]&&this.events[t].forEach((function(s,a){console.log(a,t,e),s(e)}))}}const n="UPDATE_STATE";class r extends a{constructor(t={}){super(),console.warn("\n        \"Yoooo. You are using a Development version of SubState (npm substate, etc.).\n    /( '0')/\n        "),this.name=t.name||"SubStateInstance",this.afterUpdate=t.afterUpdate||[],this.beforeUpdate=t.beforeUpdate||[],this.currentState=t.currentState||0,this.stateStorage=t.stateStorage||[],this.defaultDeep=t.defaultDeep||!1,t.state&&this.stateStorage.push(t.state),this.init()}init(){this.on(n,this.updateState.bind(this))}getState(t){return this.stateStorage[t]}getCurrentState(t){return this.getState(this.currentState)}getProp(t){return s(this.getCurrentState(),t)}changeState(t){this.currentState=t.requestedState,this.emit(t.$type||"STATE_CHANGED",this.getCurrentState())}resetState(){this.currentState=0,this.stateStorage=[this.stateStorage[0]],this.emit("STATE_RESET")}pushState(t){this.stateStorage.push(t),this.currentState=this.stateStorage.length-1,console.log("State Pushed")}updateState(t){let a;this.beforeUpdate.length>0&&this.beforeUpdate.forEach(e=>e(this,t)),a=t.$deep||this.defaultDeep?e(this.getCurrentState()):Object.assign({},this.getCurrentState());for(let e in t)console.log("replacing key ",e),t.hasOwnProperty(e)&&s(a,e,t[e]);!this.defaultDeep&&(a.$deep=!1),console.log("New State: ",a),t.$type||(a.$type=n),this.pushState(a),this.afterUpdate.length>0&&this.afterUpdate.forEach(t=>t(this)),this.emit(t.$type||"STATE_UPDATED",this.getCurrentState())}}t.mergeStores=function(t,e={}){let s={},a={},n=!1,i=[],o=[];t.forEach(t=>{s=Object.assign(t.getCurrentState(),s);for(let e in t.events)a[e]?a[e]=t.events[e].concat(a[e]):a[e]=t.events[e].slice(0);t.defaultDeep&&(n=!0),i=t.beforeUpdate.concat(i),o=t.afterUpdate.concat(o)}),e.state=s,e.defaultDeep=e.defaultDeep||n,e.afterUpdate=o,e.beforeUpdate=i;const h=new r(e);return h.events=a,h},t.substate=r,Object.defineProperty(t,"__esModule",{value:!0})}));

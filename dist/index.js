!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("deep-clone-simple"),require("object-bystring")):"function"==typeof define&&define.amd?define(["exports","deep-clone-simple","object-bystring"],e):e((t=t||self).substate={},t.deepclone,t.byString)}(this,(function(t,e,s){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,s=s&&s.hasOwnProperty("default")?s.default:s;class a{constructor(){this.events={}}on(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)}off(t,e){if(this.events[t])for(var s=0;s<this.events[t].length;s++)if(this.events[t][s]===e){this.events[t].splice(s,1);break}}emit(t,e){this.events[t]&&this.events[t].forEach((function(t,s){t(e)}))}}const r="UPDATE_STATE";class i extends a{constructor(t={}){super(),this.name=t.name||"SubStateInstance",this.afterUpdate=t.afterUpdate||[],this.beforeUpdate=t.beforeUpdate||[],this.currentState=t.currentState||0,this.stateStorage=t.stateStorage||[],this.defaultDeep=t.defaultDeep||!1,t.state&&this.stateStorage.push(t.state),this.init()}init(){this.on(r,this.updateState.bind(this))}getState(t){return this.stateStorage[t]}getCurrentState(t){return this.getState(this.currentState)}getProp(t){return s(this.getCurrentState(),t)}changeState(t){this.currentState=t.requestedState,this.emit(t.$type||"STATE_CHANGED",this.getCurrentState())}resetState(){this.currentState=0,this.stateStorage=[this.stateStorage[0]],this.emit("STATE_RESET")}pushState(t){this.stateStorage.push(t),this.currentState=this.stateStorage.length-1}updateState(t){let a;this.beforeUpdate.length>0&&this.beforeUpdate.forEach(e=>e(this,t)),a=t.$deep||this.defaultDeep?e(this.getCurrentState()):Object.assign({},this.getCurrentState());for(let e in t)t.hasOwnProperty(e)&&s(a,e,t[e]);!this.defaultDeep&&(a.$deep=!1),t.$type||(a.$type=r),this.pushState(a),this.afterUpdate.length>0&&this.afterUpdate.forEach(t=>t(this)),this.emit(t.$type||"STATE_UPDATED",this.getCurrentState())}}t.mergeStores=function(t,e={}){let s={},a={},r=!1,n=[],h=[];t.forEach(e=>{s=Object.assign(e.getCurrentState()||{},s);for(let t in e.events)a[t]?a[t]=e.events[t].concat(a[t]):a[t]=e.events[t].slice(0);e.defaultDeep&&(r=!0),a.UPDATE_STATE=a.UPDATE_STATE.slice(t.length-1),n=e.beforeUpdate.concat(n),h=e.afterUpdate.concat(h)}),e.state=s,e.defaultDeep=e.defaultDeep||r,e.afterUpdate=h,e.beforeUpdate=n;const o=new i(e);return o.events=Object.assign(o.events,a),o},t.substate=i,Object.defineProperty(t,"__esModule",{value:!0})}));

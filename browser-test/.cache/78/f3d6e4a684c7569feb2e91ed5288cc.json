{"id":"node_modules/substate/dist/index.dev.js","dependencies":[{"name":"/home/pondlebob/GitHub/my-npm-packages/substate/browser-test/package.json","includedInParent":true,"mtime":1569585916336},{"name":"/home/pondlebob/GitHub/my-npm-packages/substate/.babelrc","includedInParent":true,"mtime":1568929966070},{"name":"/home/pondlebob/GitHub/my-npm-packages/substate/browser-test/node_modules/substate/package.json","includedInParent":true,"mtime":1569588287542},{"name":"deep-clone-simple","loc":{"line":2,"column":92},"parent":"/home/pondlebob/GitHub/my-npm-packages/substate/browser-test/node_modules/substate/dist/index.dev.js","resolved":"/home/pondlebob/GitHub/my-npm-packages/substate/browser-test/node_modules/deep-clone-simple/index.js"},{"name":"object-bystring","loc":{"line":2,"column":122},"parent":"/home/pondlebob/GitHub/my-npm-packages/substate/browser-test/node_modules/substate/dist/index.dev.js","resolved":"/home/pondlebob/GitHub/my-npm-packages/substate/browser-test/node_modules/object-bystring/dist/index.js"}],"generated":{"js":"var define;\nvar global = arguments[3];\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('deep-clone-simple'), require('object-bystring')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'deep-clone-simple', 'object-bystring'], factory) :\n    (global = global || self, factory(global.substate = {}, global.deepclone, global.byString));\n}(this, function (exports, deepclone, byString) { 'use strict';\n\n    deepclone = deepclone && deepclone.hasOwnProperty('default') ? deepclone['default'] : deepclone;\n    byString = byString && byString.hasOwnProperty('default') ? byString['default'] : byString;\n\n    /**\n     * Created by root on 6/27/17.\n     */\n    class PubSub{\n        constructor(){\n            this.events = {};\n\n        }\n\n        on(eventName, fn){\n\n            this.events[eventName] = this.events[eventName] || [];\n            this.events[eventName].push(fn);\n\n        }\n\n        off(eventName, fn) {\n            if (this.events[eventName]) {\n                for (var i = 0; i < this.events[eventName].length; i++) {\n                    if (this.events[eventName][i] === fn) {\n                        this.events[eventName].splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        }\n\n        emit(eventName, data) {\n            console.log('in emit: ', data);\n            if (this.events[eventName]) {\n                this.events[eventName].forEach(function(fn, i) {\n                    console.log(i, eventName, data);\n                    fn(data);\n                });\n            }\n        }\n\n    }\n\n    const S = 'UPDATE_STATE';\n\n    class substate extends PubSub {\n        constructor(obj= {}) {\n            super();\n            console.warn(`\n        \"Yoooo. You are using a Development version of SubState (npm substate, etc.).\n    /( '0')/\n        `);\n\n\n            this.name = obj.name || \"SubStateInstance\";\n            this.afterUpdate = obj.afterUpdate || [];\n            this.beforeUpdate = obj.beforeUpdate || [];\n            this.currentState = obj.currentState || 0;\n            this.stateStorage = obj.stateStorage || [];\n            this.defaultDeep = obj.defaultDeep || false;\n\n            if (obj.state) this.stateStorage.push(obj.state);\n            this.init();\n       \n        }\n\n        init() {\n            this.on(S, this.updateState.bind(this));\n        }\n\n        getState(index) {\n            return this.stateStorage[index];\n        }\n\n        getCurrentState(s) {\n            return this.getState(this.currentState);\n        }\n\n        getProp(prop) {\n            return byString(this.getCurrentState(), prop);\n        }\n\n        changeState(action) {\n            this.currentState = action.requestedState;\n            this.emit((action.$type || 'STATE_CHANGED'), this.getCurrentState());\n        }\n\n        resetState() {\n            this.currentState = 0;\n            this.stateStorage = [this.stateStorage[0]];\n            this.emit('STATE_RESET');\n        }\n\n        // Updates the state history array and sets the currentState pointer properly\n        pushState(newState) {\n          this.stateStorage.push(newState);\n          this.currentState = (this.stateStorage.length -1);\n          console.log('State Pushed');\n        }\n\n        updateState(action) {\n            this.beforeUpdate.length > 0? this.beforeUpdate.forEach(func => func(this, action)) : null;\n            let newState;\n            if (action.$deep || this.defaultDeep){\n                newState = deepclone(this.getCurrentState());// deep clonse\n            } else {\n                newState = Object.assign({}, this.getCurrentState()); // shallow clone\n            }        \n\n            //update temp new state\n            for (let key in action) {\n                console.log('replacing key ', key);\n                if (action.hasOwnProperty(key)) byString(newState, key, action[key]);\n                 //update cloned state\n            }\n\n            this.defaultDeep? null : newState.$deep = false; // reset $deep keyword\n\n            console.log('New State: ', newState);\n\n            if(!action.$type) newState.$type = S; \n\n            //pushes new state\n            this.pushState(newState);\n\n            this.afterUpdate.length > 0? this.afterUpdate.forEach(func => func(this)) : null;\n            this.emit((action.$type || 'STATE_UPDATED'), this.getCurrentState());//emit with latest data\n        }\n    }\n\n\n    // TODO - middleware should merge and should be an array\n    function mergeStores(stores, opt = {}) {\n        let newState = {};\n        let newEvents = {};\n        let newDefaultDeep = false;\n        let beforeUpdate = [];\n        let afterUpdate = [];\n        stores.forEach(store => {\n          newState = Object.assign(store.getCurrentState() || {}, newState);\n            for (let key in store.events){\n                if(newEvents[key]){\n                    newEvents[key] = store.events[key].concat(newEvents[key]);\n                } else {\n                    newEvents[key] = store.events[key].slice(0);\n                }\n            }\n          if (store.defaultDeep) {\n            newDefaultDeep = true;\n          }\n          newEvents.UPDATE_STATE = newEvents.UPDATE_STATE.slice(stores.length -1);\n          beforeUpdate = store.beforeUpdate.concat(beforeUpdate);\n          afterUpdate = store.afterUpdate.concat(afterUpdate);\n        });\n      \n        opt.state = newState;\n        opt.defaultDeep = opt.defaultDeep || newDefaultDeep;\n        opt.afterUpdate = afterUpdate;\n        opt.beforeUpdate = beforeUpdate;\n        const newStore = new substate(opt);\n      \n        newStore.events = Object.assign(newStore.events, newEvents);\n      \n        return newStore;\n      }\n\n    exports.mergeStores = mergeStores;\n    exports.substate = substate;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/substate/dist/index.dev.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/substate/dist/index.dev.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}}],"sources":{"node_modules/substate/dist/index.dev.js":"(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('deep-clone-simple'), require('object-bystring')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'deep-clone-simple', 'object-bystring'], factory) :\n    (global = global || self, factory(global.substate = {}, global.deepclone, global.byString));\n}(this, function (exports, deepclone, byString) { 'use strict';\n\n    deepclone = deepclone && deepclone.hasOwnProperty('default') ? deepclone['default'] : deepclone;\n    byString = byString && byString.hasOwnProperty('default') ? byString['default'] : byString;\n\n    /**\n     * Created by root on 6/27/17.\n     */\n    class PubSub{\n        constructor(){\n            this.events = {};\n\n        }\n\n        on(eventName, fn){\n\n            this.events[eventName] = this.events[eventName] || [];\n            this.events[eventName].push(fn);\n\n        }\n\n        off(eventName, fn) {\n            if (this.events[eventName]) {\n                for (var i = 0; i < this.events[eventName].length; i++) {\n                    if (this.events[eventName][i] === fn) {\n                        this.events[eventName].splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        }\n\n        emit(eventName, data) {\n            console.log('in emit: ', data);\n            if (this.events[eventName]) {\n                this.events[eventName].forEach(function(fn, i) {\n                    console.log(i, eventName, data);\n                    fn(data);\n                });\n            }\n        }\n\n    }\n\n    const S = 'UPDATE_STATE';\n\n    class substate extends PubSub {\n        constructor(obj= {}) {\n            super();\n            console.warn(`\n        \"Yoooo. You are using a Development version of SubState (npm substate, etc.).\n    /( '0')/\n        `);\n\n\n            this.name = obj.name || \"SubStateInstance\";\n            this.afterUpdate = obj.afterUpdate || [];\n            this.beforeUpdate = obj.beforeUpdate || [];\n            this.currentState = obj.currentState || 0;\n            this.stateStorage = obj.stateStorage || [];\n            this.defaultDeep = obj.defaultDeep || false;\n\n            if (obj.state) this.stateStorage.push(obj.state);\n            this.init();\n       \n        }\n\n        init() {\n            this.on(S, this.updateState.bind(this));\n        }\n\n        getState(index) {\n            return this.stateStorage[index];\n        }\n\n        getCurrentState(s) {\n            return this.getState(this.currentState);\n        }\n\n        getProp(prop) {\n            return byString(this.getCurrentState(), prop);\n        }\n\n        changeState(action) {\n            this.currentState = action.requestedState;\n            this.emit((action.$type || 'STATE_CHANGED'), this.getCurrentState());\n        }\n\n        resetState() {\n            this.currentState = 0;\n            this.stateStorage = [this.stateStorage[0]];\n            this.emit('STATE_RESET');\n        }\n\n        // Updates the state history array and sets the currentState pointer properly\n        pushState(newState) {\n          this.stateStorage.push(newState);\n          this.currentState = (this.stateStorage.length -1);\n          console.log('State Pushed');\n        }\n\n        updateState(action) {\n            this.beforeUpdate.length > 0? this.beforeUpdate.forEach(func => func(this, action)) : null;\n            let newState;\n            if (action.$deep || this.defaultDeep){\n                newState = deepclone(this.getCurrentState());// deep clonse\n            } else {\n                newState = Object.assign({}, this.getCurrentState()); // shallow clone\n            }        \n\n            //update temp new state\n            for (let key in action) {\n                console.log('replacing key ', key);\n                if (action.hasOwnProperty(key)) byString(newState, key, action[key]);\n                 //update cloned state\n            }\n\n            this.defaultDeep? null : newState.$deep = false; // reset $deep keyword\n\n            console.log('New State: ', newState);\n\n            if(!action.$type) newState.$type = S; \n\n            //pushes new state\n            this.pushState(newState);\n\n            this.afterUpdate.length > 0? this.afterUpdate.forEach(func => func(this)) : null;\n            this.emit((action.$type || 'STATE_UPDATED'), this.getCurrentState());//emit with latest data\n        }\n    }\n\n\n    // TODO - middleware should merge and should be an array\n    function mergeStores(stores, opt = {}) {\n        let newState = {};\n        let newEvents = {};\n        let newDefaultDeep = false;\n        let beforeUpdate = [];\n        let afterUpdate = [];\n        stores.forEach(store => {\n          newState = Object.assign(store.getCurrentState() || {}, newState);\n            for (let key in store.events){\n                if(newEvents[key]){\n                    newEvents[key] = store.events[key].concat(newEvents[key]);\n                } else {\n                    newEvents[key] = store.events[key].slice(0);\n                }\n            }\n          if (store.defaultDeep) {\n            newDefaultDeep = true;\n          }\n          newEvents.UPDATE_STATE = newEvents.UPDATE_STATE.slice(stores.length -1);\n          beforeUpdate = store.beforeUpdate.concat(beforeUpdate);\n          afterUpdate = store.afterUpdate.concat(afterUpdate);\n        });\n      \n        opt.state = newState;\n        opt.defaultDeep = opt.defaultDeep || newDefaultDeep;\n        opt.afterUpdate = afterUpdate;\n        opt.beforeUpdate = beforeUpdate;\n        const newStore = new substate(opt);\n      \n        newStore.events = Object.assign(newStore.events, newEvents);\n      \n        return newStore;\n      }\n\n    exports.mergeStores = mergeStores;\n    exports.substate = substate;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"},"lineCount":180}},"error":null,"hash":"50985d792ceefdf780a898d6eeefb738","cacheData":{"env":{}}}